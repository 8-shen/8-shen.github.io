<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>巴神</title>
  
  <subtitle>无丝竹之乱耳，无案牍之劳形</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://8-shen.com/"/>
  <updated>2018-09-19T09:35:26.073Z</updated>
  <id>http://8-shen.com/</id>
  
  <author>
    <name>巴神</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javascript异步那些事（一）—— 单线程与多线程</title>
    <link href="http://8-shen.com/2018/09/17/javascript%E5%BC%82%E6%AD%A5%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://8-shen.com/2018/09/17/javascript异步那些事（一）/</id>
    <published>2018-09-17T07:18:18.000Z</published>
    <updated>2018-09-19T09:35:26.073Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是进程"><a href="#什么是进程" class="headerlink" title="什么是进程"></a>什么是进程</h3><ul><li><strong>狭义定义：</strong><br>  &nbsp;&nbsp;&nbsp;&nbsp;进程是正在运行的程序的实例（an instance of a computer program that is being executed）。</li><li><strong>广义定义：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，在传统的操作系统中，进程既是基本的分配单元，也是基本的执行单元，也就是说，不同的进程使用不同的内存空间。</li></ul><h3 id="什么是线程"><a href="#什么是线程" class="headerlink" title="什么是线程"></a>什么是线程</h3><ul><li>线程是进程中一个单一的顺序控制流程，一个标准的线程由线程ID，当前指令指针(PC），寄存器集合和堆栈组成</li></ul><h3 id="进程与线程的关系"><a href="#进程与线程的关系" class="headerlink" title="进程与线程的关系"></a>进程与线程的关系</h3><ul><li>线程是进程的子集，一个进程可以包含多个线程，但至少有一个线程</li></ul><h3 id="单线程与多线程的区别："><a href="#单线程与多线程的区别：" class="headerlink" title="单线程与多线程的区别："></a>单线程与多线程的区别：</h3><h5 id="举个栗子："><a href="#举个栗子：" class="headerlink" title="举个栗子："></a>举个栗子：</h5><p>你早上上班，正要打卡的时候，手机响了<br>单线程：你如果先接了电话，等接完了，再打卡，就是单线程。<br>多线程：如果你一手接电话，一手打卡。<br>两件事的结果是一样的。。你接了电话且打了卡。</p><p>由上面的例子可知，<strong>单线程做事的方式是串行，多线程做事的方式是并行</strong>，那么，并行做事的时候如果事情之间有相互依赖的话，怎么办</p><h5 id="再举个栗子"><a href="#再举个栗子" class="headerlink" title="再举个栗子"></a>再举个栗子</h5><p>有一家蛋糕店，厨师不停的生产蛋糕并放到柜台，售货员不停的从柜台售出蛋糕，这就引入了 <strong>多线程间通信的概念</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/14108946-e1f31caa0499ba42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="avatar"></p><p>上图只是简单的表达了线程间的协作方式，事实上，多线程通信协作时，需要处理的情况是非常复杂的，比如：</p><ul><li>如何保证多线程之间可以正确处理相互依赖，即多线程的执行结果要与单线程执行结果保持一致</li><li>每个线程的生命周期如何管理</li><li>当某个线程在执行过程中产生了阻塞该如何处理</li></ul><h3 id="javascript是单线程的"><a href="#javascript是单线程的" class="headerlink" title="javascript是单线程的"></a>javascript是单线程的</h3><ul><li>我们可以看到，多线程在提高工作效率的同时，带来了工作方式更为复杂的副作用。不过不用担心，我们的javascript是单线程的，完全不存在上面的问题，至于javascript的单线程具体如何，请看下回分解。</li></ul><div align="center"><br>  <img src="https://upload-images.jianshu.io/upload_images/14108946-7fb45768808d84a9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="avatar"><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是进程&quot;&gt;&lt;a href=&quot;#什么是进程&quot; class=&quot;headerlink&quot; title=&quot;什么是进程&quot;&gt;&lt;/a&gt;什么是进程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;狭义定义：&lt;/strong&gt;&lt;br&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
      
    
    </summary>
    
      <category term="技术" scheme="http://8-shen.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="javascript" scheme="http://8-shen.com/tags/javascript/"/>
    
      <category term="nodejs" scheme="http://8-shen.com/tags/nodejs/"/>
    
  </entry>
  
</feed>
